apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/ssl-temporary-redirect: "true"
    {{- if .Values.apps.oauth2Proxy.enabled }}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    {{- end }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Content-Security-Policy: img-src 'self' blob: data:";
spec:
  tls:
  - secretName: wildcard-tls
    hosts:
    - "{{ .Values.domain }}"
    - "*.{{ .Values.domain }}"
  rules:
  {{- range $key, $value := .Values.apps }}
  {{- if and $value.enabled (ne $key "oauth2Proxy") }}
  - host: {{ printf "%v.%v" $key $.Values.domain }}
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: {{ $key }}
            port:
              name: {{ $key }}
  {{- end -}}
  {{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2Proxy
spec:
  tls:
  - secretName: wildcard-tls
    hosts:
    - "{{ .Values.domain }}"
    - "*.{{ .Values.domain }}"
  rules:
  {{- range $key, $value := .Values.apps }}
  {{- if and $value.enabled (ne $key "oauth2Proxy") }}
  - host: {{ printf "%v.%v" $key $.Values.domain }}
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2Proxy
            port:
              name: oauth2Proxy
  {{- end -}}
  {{ end -}}