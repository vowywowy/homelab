{{- range $key, $value := .Values.apps }}
{{ if $.Values.apps.qbittorrent.enabled }}
{{ if $value.enabled }}
{{ if or (eq $key "sonarr") (eq $key "radarr") (eq $key "qbittorrent")}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%v-init" $key }}
data:
  init.sh: |
    #!/bin/bash
    set -euo pipefail

    {{- if or (eq $key "sonarr") (eq $key "radarr") }}
    while [ ! -f /config/{{ $key }}.db ]; do
      echo "Waiting for {{ $key }} database to exist..."
      sleep 1;
    done;
    echo "Database found!"
    echo "Adding download client..."
    sqlite3 -csv /config/{{ $key }}.db '.import /tmp/init/downloadClients.csv DownloadClients'
    {{- end }}

    {{- if eq $key "qbittorrent" }}
    until [ $(curl -sw '%{http_code}' -o /dev/null "http://qbittorrent:8080/api/v2/auth/login?username=admin&password=adminadmin") == "200" ]; do
      echo "Waiting for {{ $key }} API...";
      sleep 1;
    done;
    echo "API is ready!"
    echo "Changing settings..."
    curl -so /dev/null -c cookies "http://qbittorrent:8080/api/v2/auth/login?username=admin&password=adminadmin"
    curl -so /dev/null -c cookies -b cookies "http://qbittorrent:8080/api/v2/app/setPreferences?json=\{\"bypass_auth_subnet_whitelist_enabled\":true,\"bypass_auth_subnet_whitelist\":\"0.0.0.0/0\"\}"
    {{- end}}
{{- if or (eq $key "sonarr") (eq $key "radarr") }}
  downloadClients.csv: |
    Id,Enable,Name,Implementation,Settings,ConfigContract,Priority
    1,1,qbittorrent,QBittorrent,"{
      ""host"": ""qbittorrent"",
      ""port"": 8080,
      ""useSsl"": false,
      ""username"": """",
      ""password"": """",
      {{- if eq $key "sonarr" }}
      ""tvCategory"": ""{{ $key }}"",
      ""recentTvPriority"": 0,
      ""olderTvPriority"": 0,
      {{- else }}
      ""movieCategory"": ""{{ $key }}"",
      ""recentMoviePriority"": 0,
      ""olderMoviePriority"": 0,
      {{- end }}
      ""initialState"": 0
    }",QBittorrentSettings,1
{{- end }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}