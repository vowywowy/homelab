---
version: '3.7'
services:
  portainer_agent:
    image: portainer/agent
    env_file:
      - ./.env/portainer_agent.env
    deploy:
      mode: global
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    networks:
      - swarm-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
  portainer:
    image: portainer/portainer
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
      placement:
        constraints: [node.role == manager]
    networks:
      - swarm-net
    volumes:
      - portainer:/data
    command: -H tcp://tasks.portainer_agent:9001 --tlsskipverify
  shepherd:
    image: mazzolino/shepherd
    env_file: 
      - ./.env/shepherd.env
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
      placement:
        constraints: [node.role == manager]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  nginx:
    image: nginx:alpine
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    networks:
      - swarm-net
    ports:
      - "80:80"
      - "443:443"
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf
  qbittorrent:
    image: linuxserver/qbittorrent
    env_file:
      - ./.env/common.env
      - ./.env/qb.env
    volumes:
      - qbittorrent:/config
      - downloads:/downloads
    networks:
      - swarm-net
  smb:
    image: dperson/samba
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    env_file:
      - ./.env/smb.env
    volumes:
      - downloads:/downloads
      - torrents:/torrents
    networks: 
      - swarm-net
    ports:
      - "139:139"
      - "445:445"
      - "137-138:137-138/udp"
    command: -n -r -p -s "downloads;/downloads;yes;no" -s "torrents;/torrents;yes;no"
  plex:
    image: plexinc/pms-docker:public
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    volumes: 
      - downloads:/data
      - plex_transcode:/transcode
      - plex_config:/config
    networks:
      - swarm-net
    ports:
      - "32400:32400"
      - "3005:3005"
      - "8324:8324"
      - "32469:32469"
      - "32410:32410/udp"
      - "32412-32414:32412-32414/udp"
      - "1900:1900/udp"
    env_file:
      - ./.env/common.env
      - ./.env/plex.env    
  sonarr:
    image: linuxserver/sonarr
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    env_file:
      - ./.env/common.env
    volumes:
      - sonarr:/config
      - downloads:/tv
      - downloads:/downloads
    networks:
      - swarm-net
    ports:
      - "8989:8989"  
  radarr:
    image: linuxserver/radarr
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    env_file:
      - ./.env/common.env
    volumes:
      - radarr:/config
      - downloads:/movies
      - downloads:/downloads
    networks:
      - swarm-net
    ports:
      - "7878:7878"  
  jackett:
    image: linuxserver/jackett
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    env_file:
      - ./.env/common.env
    volumes:
      - jackett:/config
      - torrents:/downloads
    networks:
      - swarm-net
  pihole:
    image: pihole/pihole:latest
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    env_file:
      - ./.env/pihole.env
    volumes:
      - pihole_config:/etc/pihole
      - pihole_dnsmasq:/etc/dnsmasq.d
    dns:
      - 127.0.0.1
    networks:
      - swarm-net
    ports:
      - "53:53"
      - "53:53/udp"
      - "67:67"
      - "67:67/udp"

volumes:
  portainer:
  downloads:
  qbittorrent:
  torrents:
  plex_config:
  plex_transcode:
  sonarr:
  radarr:
  jackett:
  pihole_config:
  pihole_dnsmasq:

configs:
  nginx_config:
    file: ./nginx/homelab.conf
  netdata_nginx_config:
    file: ./netdata/nginx.conf
    
networks:
  swarm-net:
    driver: overlay
