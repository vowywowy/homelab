---
version: '3.8'

x-default-logging-and-network: &default-logging-and-network
  logging:
    options:
      max-size: 10m
      max-file: 5
  networks: [network]

x-default-global-deploy: &default-global-deploy
  mode: global
  update_config:
    failure_action: rollback
  rollback_config:
    parallelism: 0
  placement:
    constraints: [node.role == manager]

x-default-env-file: &default-env-file
  env_file: [./.env/common.env]

services:
  traefik:
    image: traefik
    command:
      #- "--log.level=DEBUG"
      - "--accesslog=true"
      - "--api"
      - "--serversTransport.insecureSkipVerify=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.defaultRule=Host(`{{ trimPrefix \"homelab-\" .Name }}.app.lan.rip`)"
      ###
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      ###
      - "--certificatesResolvers.resolver.acme.email=vowywowy@gmail.com"
      - "--certificatesResolvers.resolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.resolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.resolver.acme.dnschallenge.resolvers=8.8.8.8:53"
      - "--certificatesresolvers.resolver.acme.dnschallenge.delaybeforecheck=0"
    <<: *default-logging-and-network
    deploy:
      <<: *default-global-deploy
      labels:
        - "traefik.enable=true"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
        - "traefik.http.routers.redirs.entrypoints=web"
        - "traefik.http.routers.redirs.middlewares=redirect-to-https"
        ###
        - "traefik.http.routers.traefik.tls.certresolver=resolver"
        - "traefik.http.routers.traefik.tls.domains[0].main=app.lan.rip"
        - "traefik.http.routers.traefik.tls.domains[0].sans=*.app.lan.rip"
        ###
        - "traefik.http.routers.traefik.rule=Host(`traefik.app.lan.rip`)"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.routers.traefik.middlewares=admin"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.middlewares.admin.basicauth.users=admin:$$apr1$$LkytPQrw$$N6YcaPrgbN38KhLXdmbQ71"
        - "traefik.http.services.traefik.loadbalancer.server.port=443"
    env_file: [./.env/traefik.env]
    volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
    ports:
      - "80:80"
      - "443:443"
  portainer_agent:
    image: portainer/agent
    <<: *default-logging-and-network
    deploy:
      <<: *default-global-deploy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
  portainer:
    image: portainer/portainer
    <<: *default-logging-and-network
    deploy:
      <<: *default-global-deploy
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.tls=true"
        - "traefik.http.services.potainer.loadbalancer.server.port=9000"
    volumes:
      #- ./portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    command: -H tcp://tasks.portainer_agent:9001 --tlsskipverify
  shepherd:
    image: mazzolino/shepherd
    <<: *default-logging-and-network
    deploy:
      <<: *default-global-deploy
    env_file: [./.env/shepherd.env]
    volumes: [/var/run/docker.sock:/var/run/docker.sock]
  qb:
    image: linuxserver/qbittorrent
    <<: *default-logging-and-network
    deploy:
      <<: *default-global-deploy
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.qb.entrypoints=websecure"
        - "traefik.http.routers.qb.tls=true"
        - "traefik.http.services.qb.loadbalancer.server.port=8080"
    <<: *default-env-file
  #  volumes:
  #    - ./qbittorrent:/config
  #    - ./downloads:/downloads
  smb:
    image: dperson/samba
    <<: *default-logging-and-network
    deploy:
      <<: *default-global-deploy
    env_file: [./.env/smb.env]
  #  volumes:
  #    - ./downloads:/downloads
  #    - ./torrents:/torrents
    command: -n -r -p -s "downloads;/downloads;yes;no" -s "torrents;/torrents;yes;no"
    ports:
      - "139:139"
      - "445:445"
      - "137-138:137-138/udp"
  plex:
    image: plexinc/pms-docker:public
    <<: *default-logging-and-network
    deploy:
      <<: *default-global-deploy
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.plex.entrypoints=websecure"
        - "traefik.http.routers.plex.tls=true"
        - "traefik.http.services.plex.loadbalancer.server.port=32400"
    env_file: [./.env/plex.env]
  #  volumes:
  #    - ./downloads:/data
  #    - ./plex:/config
    ports:
      - "32400:32400"
      - "3005:3005"
      - "8324:8324"
      - "32469:32469"
      - "32410:32410/udp"
      - "32412-32414:32412-32414/udp"
      - "1900:1900/udp"
  sonarr:
    image: linuxserver/sonarr
    <<: *default-logging-and-network
    deploy:
      <<: *default-global-deploy
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.sonarr.entrypoints=websecure"
        - "traefik.http.routers.sonarr.tls=true"
        - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    <<: *default-env-file
  #  volumes:
  #    - ./sonarr:/config
  #    - ./downloads:/tv
  #    - ./downloads:/downloads
  radarr:
    image: linuxserver/radarr
    <<: *default-logging-and-network
    deploy:
      <<: *default-global-deploy
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.radarr.entrypoints=websecure"
        - "traefik.http.routers.radarr.tls=true"
        - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    <<: *default-env-file
  #  volumes:
  #    - ./radarr:/config
  #    - ./downloads:/movies
  #    - ./downloads:/downloads
  jackett:
    image: linuxserver/jackett
    <<: *default-logging-and-network
    deploy:
      <<: *default-global-deploy
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.jackett.entrypoints=websecure"
        - "traefik.http.routers.jackett.tls=true"
        - "traefik.http.services.jackett.loadbalancer.server.port=9117"
    <<: *default-env-file
  #  volumes:
  #    - ./jackett:/config
  #    - ./torrents:/downloads
  #configurator:
  #  image: python
  #  command: ["pip", "install", "ansible", "&&", "ansible", ""]

networks:
  network:

#volumes:
#  portainer:
#  downloads:
#  qbittorrent:
#  torrents:
#  plex:
#  sonarr:
#  radarr:
#  jackett:
