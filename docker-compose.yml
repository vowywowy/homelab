---
version: '3.7'
services:
  portainer:
    image: portainer/portainer
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    networks:
      - port-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data
    command: -H unix:///var/run/docker.sock
   
  watchtower:
    image: v2tec/watchtower
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    networks:
      - watch-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    #check at 3am only
    command: --cleanup --schedule "0 0 3 * * *"
    
#  netdata:
# 
#    image: titpetric/netdata
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - data-net
#    configs:
#      - source: netdata_nginx_config
#      - target: /etc/netdata/python.d/nginx.conf
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /var/run/docker.sock:/var/run/docker.sock

  nginx:
    image: nginx:alpine
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    networks:
      - port-net
#      - data-net
      - plex-net
#      - pi-net
      - son-ng-net
      - rad-ng-net
      - jack-net
    ports:
      - "80:80"
      - "443:443"
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf    

  qbittorrent:
    image: linuxserver/qbittorrent
    env_file:
      - ./.env/common.env
      - ./.env/qb.env
    volumes:
      - ./qbittorrent/config:/config
      - ./downloads:/downloads
    networks:
      - son-qb-net
      - rad-qb-net
 
  smb:
    image: dperson/samba
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    env_file:
      - ./.env/common.env
    volumes:
      - ./downloads:/downloads
      - ./torrents:/torrents
    networks: 
      - smb-net
    ports:
      - "139:139"
      - "445:445"
      - "137-138:137-138/udp"
    command: -n -r -p -s "downloads;/downloads;yes;no" -s "torrents;/torrents;yes;no"

  plex:
    image: plexinc/pms-docker:public
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    volumes: 
      - ./downloads:/data
      - ./plex/transcode:/transcode
      - ./plex/config:/config
    networks:
      - plex-net
    ports:
      - "32400:32400"
      - "3005:3005"
      - "8324:8324"
      - "32469:32469"
      - "32410:32410/udp"
      - "32412-32414:32412-32414/udp"
      - "1900:1900/udp"
    env_file:
      - ./.env/common.env
      - ./.env/plex.env
    
  sonarr:
    image: linuxserver/sonarr
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    env_file:
      - ./.env/common.env
    volumes:
      - ./sonarr:/config
      - ./downloads:/tv
      - ./downloads:/downloads
    networks:
      - son-qb-net
      - son-ng-net
      - son-jack-net
    ports:
      - "8989:8989"
  
  radarr:
    image: linuxserver/radarr
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    env_file:
      - ./.env/common.env
    volumes:
      - ./radarr:/config
      - ./downloads:/movies
      - ./downloads:/downloads
    networks:
      - rad-qb-net
      - rad-ng-net
      - rad-jack-net
    ports:
      - "7878:7878"
  
  jackett:
    image: linuxserver/jackett
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
      rollback_config:
        parallelism: 0
    env_file:
      - ./.env/common.env
    volumes:
      - ./jackett:/config
      - ./torrents:/downloads
    networks:
      - son-jack-net
      - rad-jack-net
      - jack-net
  
  #minecraft:
  #  image: itzg/minecraft-server
  #  environment:
  #    - EULA=TRUE
  #  volumes:
  #    - ./minecraft:/data
  #  networks:
  #    - mine-net
  #  ports: 
  #    - "25565:25565"
  
#  pihole:
#    image: pihole/pihole:latest
# 
#    environment: 
#      - TZ=America/Toronto
#      - DNS1=208.67.220.222
#      - DNS2=208.67.222.220
#    volumes:
#      - ./pihole/config:/etc/pihole
#      - ./pihole/dnsmasq:/etc/dnsmasq.d
#    dns:
#      - 127.0.0.1
#    networks:
#      - pi-net
#    ports:
#      - "53:53"
#      - "53:53/udp"
#      - "67:67"
#      - "67:67/udp"
#    

configs:
  nginx_config:
    file: ./nginx/homelab.conf
  netdata_nginx_config:
    file: ./netdata/nginx.conf
    
networks:
  port-net:
    driver: overlay
#  data-net:
#    driver: overlay
  watch-net:
    driver: overlay
  smb-net:
    driver: overlay
  plex-net:
    driver: overlay
  son-qb-net:
    driver: overlay
  son-ng-net:
    driver: overlay
  son-jack-net:
    driver: overlay
  rad-qb-net:
    driver: overlay
  rad-ng-net:
    driver: overlay
  rad-jack-net:
    driver: overlay
  jack-net:
    driver: overlay
#  mine-net:
#    driver: overlay
#  pi-net:
#    driver: overlay
